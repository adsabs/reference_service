# pystruct assumes that all trainning and testing samples have the same shape, the same number of nodes and states
# /python/lib/python2.7/site-packages/pystruct/models/graph_crf.py, line 198
# assuming the same number of nodes (features) is reasonable, however for NLP number of states (sentence length) varies
# from sample to sample, but this is in graph_crf which they have suggested to use for NLP
# TODO: should drive from graph_crf, implement joint_feature function to properly consider various length sentences
# for now do as they have done in their sample example, define static fold
# if the first training and testing sample is one of the longest references it would work
# hence the following static division of training and test works and shall be used for now
# instead of random number generator that usually is used in dividing train and test sample in ML
STATIC_FOLD = [5, 8, 8, 2, 7, 2, 5, 7, 3, 6, 5, 8, 7, 2, 2, 2, 3, 2, 5, 5, 8, 7, 7, 6, 2, 0, 8, 1, 7, 1, 6, 3, 1, 7, 3, 8, 3, 5, 7, 7, 5, 7, 8, 2, 8, 3, 0, 4, 0, 3, 8, 1, 8, 1, 0, 8, 5, 0, 7, 8, 8, 3, 3, 6, 2, 5, 6, 7, 8, 6, 3, 1, 4, 1, 1, 8, 3, 6, 8, 6, 5, 6, 2, 5, 3, 5, 2, 2, 6, 3, 1, 8, 7, 1, 4, 3, 7, 1, 4, 4, 8, 1, 8, 0, 2, 4, 8, 5, 4, 3, 2, 7, 3, 8]